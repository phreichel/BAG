//*************************************************************************************************
package jlib.gui;
//*************************************************************************************************

import java.util.ArrayList;
import java.util.List;

import jlib.gui.feel.Feel;
import jlib.gui.layout.Layout;
import jlib.gui.look.Look;
import jlib.message.Message;
import jlib.platform.Graphics;

//*************************************************************************************************
public class Widget implements Element {

	//=============================================================================================
	private float x = 0f;
	private float y = 0f;
	private float width = 100f;
	private float height = 50f;
	private List<Element> elements = new ArrayList<>();
	private Layout layout;
	private Look look = Look.DEFAULT;
	private Feel feel;
	//=============================================================================================
	
	//=============================================================================================
	public float x() {
		return x;
	}
	//=============================================================================================

	//=============================================================================================
	public float y() {
		return y;
	}
	//=============================================================================================

	//=============================================================================================
	public void position(float x, float y) {
		this.x = x;
		this.y = y;
	}
	//=============================================================================================
	
	//=============================================================================================
	public float width() {
		return width;
	}
	//=============================================================================================

	//=============================================================================================
	public float height() {
		return height;
	}
	//=============================================================================================

	//=============================================================================================
	public void size(float w, float h) {
		width = w;
		height = h;
	}
	//=============================================================================================

	//=============================================================================================
	public int elements() {
		return elements.size();
	}
	//=============================================================================================

	//=============================================================================================
	public Element element(int i) {
		return elements.get(i);
	}
	//=============================================================================================

	//=============================================================================================
	public void insert(Element e) {
		if (!elements.contains(e))
			elements.add(e);
	}
	//=============================================================================================

	//=============================================================================================
	public void remove(Element e) {
		elements.remove(e);
	}
	//=============================================================================================

	//=============================================================================================
	public Layout layout() {
		return layout;
	}
	//=============================================================================================

	//=============================================================================================
	public void layout(Layout l) {
		layout = l;
	}
	//=============================================================================================

	//=============================================================================================
	public Look look() {
		return look;
	}
	//=============================================================================================

	//=============================================================================================
	public void look(Look look) {
		this.look = look;
	}
	//=============================================================================================
	
	//=============================================================================================
	public void doLayout() {
		var layout = layout();
		if (layout != null)
			layout.apply(this);
		for (int i=0; i<elements(); i++) {
			var child = element(i);
			child.doLayout();
		}
	}
	//=============================================================================================
	
	//=============================================================================================
	public void draw(Graphics g) {
		drawElement(g);
		drawChildElements(g);
	}
	//=============================================================================================

	//=============================================================================================
	protected void drawElement(Graphics g) {
		if (look != null) {
			look.render(g, this);
		}
	}
	//=============================================================================================
	
	//=============================================================================================
	protected void drawChildElements(Graphics g) {
		int n = elements();
		for (int i=0; i<n; i++) {
			int idx = n - i - 1;
			Element child = element(idx);
			float x = child.x();
			float y = child.y();
			g.push(x, y);
			child.draw(g);
			g.pop();
		}
	}
	//=============================================================================================
	
	//=============================================================================================
	public Feel feel() {
		return feel;
	}
	//=============================================================================================

	//=============================================================================================
	public void feel(Feel feel) {
		this.feel = feel;
	}
	//=============================================================================================

	//=============================================================================================
	public void react(Message message) {
		if (feel != null) {
			feel.react(this, message);
		}
	}
	//=============================================================================================
	
}
//*************************************************************************************************
