//*************************************************************************************************
package jlib.gui;
//*************************************************************************************************

import jlib.gui.feel.Feel;
import jlib.gui.layout.Layout;
import jlib.gui.look.Look;
import jlib.message.Message;
import jlib.platform.Graphics;

//*************************************************************************************************
public class Padding implements Element {

	//=============================================================================================
	private float left   = 0f;
	private float right  = 0f;
	private float top    = 0f;
	private float bottom = 0f;
	private Element element;
	private Look border = Look.PADDING;
	private Feel feel;
	//=============================================================================================

	//=============================================================================================
	public Padding(Element e) {
		element = e;
	}
	//=============================================================================================

	//=============================================================================================
	public float left() {
		return left;
	}
	//=============================================================================================

	//=============================================================================================
	public float right() {
		return right;
	}
	//=============================================================================================

	//=============================================================================================
	public float top() {
		return top;
	}
	//=============================================================================================

	//=============================================================================================
	public float bottom() {
		return bottom;
	}
	//=============================================================================================
	
	//=============================================================================================
	public void padding(float left, float right, float top, float bottom) {
		float w = element.width() + (this.left + this.right);
		float h = element.height() + (this.top + this.bottom);
		element.size(w - (left + right), h - (top + bottom));
		this.left = left;
		this.right = right;
		this.top = top;
		this.bottom = bottom;
	}
	//=============================================================================================
	
	//=============================================================================================
	public float x() {
		return element.x() - left;
	}
	//=============================================================================================

	//=============================================================================================
	public float y() {
		return element.y() - top;
	}
	//=============================================================================================

	//=============================================================================================
	public void position(float x, float y) {
		element.position(x + left, y + top);
	}
	//=============================================================================================
	
	//=============================================================================================
	public float width() {
		return element.width() + (left + right);
	}
	//=============================================================================================

	//=============================================================================================
	public float height() {
		return element.height() + (top + bottom);
	}
	//=============================================================================================

	//=============================================================================================
	public void size(float w, float h) {
		element.size(w - (left + right), h - (top + bottom));
	}
	//=============================================================================================

	//=============================================================================================
	public int elements() {
		return element.elements();
	}
	//=============================================================================================

	//=============================================================================================
	public Element element(int i) {
		return element.element(i);
	}
	//=============================================================================================

	//=============================================================================================
	public void insert(Element e) {
		element.insert(e);
	}
	//=============================================================================================

	//=============================================================================================
	public void remove(Element e) {
		element.remove(e);
	}
	//=============================================================================================

	//=============================================================================================
	public Layout layout() {
		return element.layout();
	}
	//=============================================================================================

	//=============================================================================================
	public void layout(Layout l) {
		element.layout(l);
	}
	//=============================================================================================

	//=============================================================================================
	public void doLayout() {
		element.doLayout();
	}
	//=============================================================================================

	//=============================================================================================
	public Look look() {
		return element.look();
	}
	//=============================================================================================

	//=============================================================================================
	public void look(Look l) {
		element.look(l);
	}
	//=============================================================================================
	
	//=============================================================================================
	public void draw(Graphics g) {
		drawBorder(g);
		g.push(left, top);
		element.draw(g);
		g.pop();
	}
	//=============================================================================================

	//=============================================================================================
	public Look border() {
		return border;
	}
	//=============================================================================================

	//=============================================================================================
	public void border(Look l) {
		border = l;
	}
	//=============================================================================================
	
	//=============================================================================================
	protected void drawBorder(Graphics g) {
		if (border != null) {
			border.render(g, this);
		}
	}
	//=============================================================================================

	//=============================================================================================
	public void decoFeel(Feel feel) {
		this.feel = feel;
	}
	//=============================================================================================

	//=============================================================================================
	public Feel decoFeel() {
		return feel;
	}
	//=============================================================================================
	
	//=============================================================================================
	public Feel feel() {
		return element.feel();
	}
	//=============================================================================================

	//=============================================================================================
	public void feel(Feel feel) {
		element.feel(feel);
	}
	//=============================================================================================

	//=============================================================================================
	public void react(Message message) {
		if (feel != null) feel.react(this, message);
		element.react(message);
	}
	//=============================================================================================
	
}
//*************************************************************************************************
