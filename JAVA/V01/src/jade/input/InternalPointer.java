//**************************************************************************************************
package jade.input;
//**************************************************************************************************

import java.util.Collections;
import java.util.EnumSet;
import java.util.Set;

import lombok.Getter;

//**************************************************************************************************
public class InternalPointer implements Pointer {

	//==============================================================================================
	private Set<Button> buttons = EnumSet.noneOf(Button.class); 
	private Set<Button> readonlyButtons = Collections.unmodifiableSet(buttons);
	@Getter private float x;
	@Getter private float y;
	private boolean inside = true;
	//==============================================================================================

	//==============================================================================================
	public void setPosition(float x, float y) {
		this.x = x;
		this.y = y;
	}
	//==============================================================================================
	
	//==============================================================================================
	public Set<Button> getButtons() {
		return readonlyButtons;
	}
	//==============================================================================================

	//==============================================================================================
	public void setButton(Button button, boolean set) {
		if (set)
			buttons.add(button);
		else
			buttons.remove(button);
	}
	//==============================================================================================
	
	//==============================================================================================
	public boolean isInside() {
		return inside;
	}
	//==============================================================================================

	//==============================================================================================
	public boolean isVisible() {
		return inside;
	}
	//==============================================================================================
	
}
//**************************************************************************************************
