//**************************************************************************************************
package jade.clock;
//**************************************************************************************************

import java.util.LinkedList;
import java.util.List;

//**************************************************************************************************
public class Clock {

	//==============================================================================================
	private List<Schedule> schedules = new LinkedList<>();
	//==============================================================================================

	//==============================================================================================
	public List<Schedule> get() {
		return schedules;
	}
	//==============================================================================================

	//==============================================================================================
	public void add(Schedule schedule) {
		schedules.add(schedule);
	}
	//==============================================================================================

	//==============================================================================================
	public void add(long period, Task task) {
		Schedule schedule = new Schedule(period, task);
		add(schedule);
	}
	//==============================================================================================
	
	//==============================================================================================
	public void init() {
		long now = System.nanoTime();
		for (Schedule schedule : schedules) {
			schedule.init(now);
		}
	}
	//==============================================================================================
	
	//==============================================================================================
	public void update() {
		long now = System.nanoTime();
		for (Schedule schedule : schedules) {
			schedule.update(now);
		}
	}
	//==============================================================================================
	
}
//**************************************************************************************************
