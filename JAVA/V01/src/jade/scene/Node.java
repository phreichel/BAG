//**************************************************************************************************
package jade.scene;
//**************************************************************************************************

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;

import jade.render.Renderer;
import lombok.Getter;

//**************************************************************************************************
public class Node {

	//==============================================================================================
	@Getter protected Node parent = null;
	protected List<Node> children = new LinkedList<>();
	private List<Node> readonlyChildren = Collections.unmodifiableList(children);
	//==============================================================================================

	//==============================================================================================
	public List<Node> getChildren() {
		return readonlyChildren;
	}
	//==============================================================================================

	//==============================================================================================
	public void addChild(Node child) {
		if (child.parent != null) {
			child.parent.children.remove(child);
		}
		child.parent = this;
		children.add(child);
	}
	//==============================================================================================

	//==============================================================================================
	public void delChild(Node child) {
		if (this.children.remove(child)) {
			child.parent = null;
		}
	}
	//==============================================================================================

	//==============================================================================================
	public void render(Renderer renderer) {
		renderNodePre(renderer);
		renderChildren(renderer);
		renderNodePost(renderer);
	}
	//==============================================================================================

	//==============================================================================================
	protected void renderNodePre(Renderer renderer) {}
	protected void renderNodePost(Renderer renderer) {}
	//==============================================================================================

	//==============================================================================================
	protected void renderChildren(Renderer renderer) {
		for (Node child : getChildren()) {
			child.render(renderer);
		}
	}
	//==============================================================================================
	
}
//**************************************************************************************************
