//**************************************************************************************************
package jade.entity;
//**************************************************************************************************

import javax.vecmath.AxisAngle4f;
import javax.vecmath.Matrix3f;
import javax.vecmath.Matrix4f;
import javax.vecmath.Quat4f;

import jade.scene.Transform;
import lombok.Getter;
import lombok.Setter;

//**************************************************************************************************
public class PoseComponent implements Component {

	//==============================================================================================
	@Getter private Matrix4f pose = new Matrix4f();
	@Getter @Setter private Transform transform;
	//==============================================================================================
	
	//==============================================================================================
	public PoseComponent() {
		pose.setIdentity();
	}
	//==============================================================================================
	
	//==============================================================================================
	public String getKey() {
		return Component.KEY_POSE;
	}
	//==============================================================================================

	//==============================================================================================
	public void setPosition(float x, float y, float z) {
		pose.m03 = x;
		pose.m13 = y;
		pose.m23 = z;
	}
	//==============================================================================================

	//==============================================================================================
	public void addPosition(float dx, float dy, float dz) {
		pose.m03 += dx;
		pose.m13 += dy;
		pose.m23 += dz;
	}
	//==============================================================================================

	//==============================================================================================
	public void addPositionLocal(float dx, float dy, float dz) {
		pose.m03 += dx * pose.m00 + dy * pose.m01 + dz * pose.m02;
		pose.m13 += dx * pose.m10 + dy * pose.m11 + dz * pose.m12;
		pose.m23 += dx * pose.m20 + dy * pose.m21 + dz * pose.m22;
	}
	//==============================================================================================

	//==============================================================================================
	public void setRotX(float rad) {
		Matrix3f rot = new Matrix3f();
		rot.rotX(rad);
		pose.setRotation(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void setRotY(float rad) {
		Matrix3f rot = new Matrix3f();
		rot.rotY(rad);
		pose.setRotation(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void setRotZ(float rad) {
		Matrix3f rot = new Matrix3f();
		rot.rotZ(rad);
		pose.setRotation(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void setRot(Quat4f rot) {
		pose.setRotation(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void setRot(AxisAngle4f rot) {
		pose.setRotation(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void setRot(Matrix3f rot) {
		pose.setRotation(rot);
	}
	//==============================================================================================
	
	//==============================================================================================
	public void addRotX(float rad) {
		Matrix4f rot = new Matrix4f();
		rot.rotX(rad);
		pose.mul(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void addRotY(float rad) {
		Matrix4f rot = new Matrix4f();
		rot.rotY(rad);
		pose.mul(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void addRotZ(float rad) {
		Matrix4f rot = new Matrix4f();
		rot.rotZ(rad);
		pose.mul(rot);
	}
	//==============================================================================================

	//==============================================================================================
	public void addRot(Quat4f rot) {
		Matrix4f rotm = new Matrix4f();
		rotm.set(rot);
		pose.mul(rotm);
	}
	//==============================================================================================

	//==============================================================================================
	public void addRot(AxisAngle4f rot) {
		Matrix4f rotm = new Matrix4f();
		rotm.set(rot);
		pose.mul(rotm);
	}
	//==============================================================================================

	//==============================================================================================
	public void addRot(Matrix3f rot) {
		Matrix4f rotm = new Matrix4f();
		rotm.set(rot);
		pose.mul(rotm);
	}
	//==============================================================================================
	
	//==============================================================================================
	public void update(float dT) {
		if (transform != null) {
			transform.setRelative(pose);
		}
	}
	//==============================================================================================

}
//**************************************************************************************************
