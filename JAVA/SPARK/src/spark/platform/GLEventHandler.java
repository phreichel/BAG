//*********************************************************************************************************************
package spark.platform;
//*********************************************************************************************************************

import com.jogamp.opengl.GL2;
import com.jogamp.opengl.GLAutoDrawable;
import com.jogamp.opengl.GLEventListener;

//*********************************************************************************************************************
class GLEventHandler implements GLEventListener {

	//=================================================================================================================
	private GLGraphics graphics;
	private ResizeHandler resizeHandler;
	private GraphicsHandler graphicsHandler;
	//=================================================================================================================

	//=================================================================================================================
	public ResizeHandler resize() {
		return resizeHandler;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void resize(ResizeHandler handler) {
		if (resizeHandler == handler) return;
		resizeHandler = handler;
	}
	//=================================================================================================================

	//=================================================================================================================
	public GraphicsHandler graphics() {
		return graphicsHandler;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void graphics(GraphicsHandler handler) {
		if (graphicsHandler == handler) return;
		graphicsHandler = handler;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void init(GLAutoDrawable drawable) {
		graphics = new GLGraphics(drawable);
	}
	//=================================================================================================================

	//=================================================================================================================
	public void reshape(GLAutoDrawable drawable, int x, int y, int width, int height) {
		if (resizeHandler != null) resizeHandler.handle(width, height);
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void display(GLAutoDrawable drawable) {
		
		var api = drawable.getGL().getGL2();
		api.glClear(GL2.GL_COLOR_BUFFER_BIT | GL2.GL_DEPTH_BUFFER_BIT);
		
		graphics.begin();
		if (graphicsHandler != null) graphicsHandler.handle(graphics);
		
	}
	//=================================================================================================================

	//=================================================================================================================
	public void dispose(GLAutoDrawable drawable) {
		
	}
	//=================================================================================================================
	
}
//*********************************************************************************************************************
