//*********************************************************************************************************************
package spark.qtree;
//*********************************************************************************************************************

import java.util.HashSet;
import java.util.Set;

//*********************************************************************************************************************
public class QTree {

	//=================================================================================================================
	private QNode        root    = new QNode();
	private Set<QObject> objects = new HashSet<>();
	//=================================================================================================================

	//=================================================================================================================
	public QTree() {
		root = new QNode();
	}
	//=================================================================================================================

	//=================================================================================================================
	public void add(QObject object) {
		objects.add(object);
		root.add(object);
	}
	//=================================================================================================================

	//=================================================================================================================
	public void delete(QObject object) {
		if (objects.remove(object)) {
			object.node.delete(object);
		}
	}
	//=================================================================================================================

	//=================================================================================================================
	public void update(QObject object) {
		QNode current = object.node;
		while (current.parent != null && !current.encloses(object)) {
			current = current.parent;
		}
		object.node.delete(object);
		current.add(object);		
	}
	//=================================================================================================================
	
}
//*********************************************************************************************************************
