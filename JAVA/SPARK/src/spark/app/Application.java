//*********************************************************************************************************************
package spark.app;
//*********************************************************************************************************************

import spark.clock.Clock;
import spark.gui.Button;
import spark.gui.Component;
import spark.gui.GUI;
import spark.gui.Menu;
import spark.platform.Graphics;
import spark.platform.Input;
import spark.platform.Platform;
import spark.scene.Scene;

//*********************************************************************************************************************
public class Application {

	//=================================================================================================================
	protected Clock    clock;
	protected Platform platform;
	protected GUI      gui;
	protected Scene    scene;
	//=================================================================================================================

	//=================================================================================================================
	public Application() {
		clock = new Clock();
		platform = new Platform();
		gui = new GUI();
		scene = new Scene(clock);		
	}
	//=================================================================================================================

	//=================================================================================================================
	private boolean shutdown = false;
	//=================================================================================================================

	//=================================================================================================================
	public void shutdown() {
		if (!shutdown) {
			shutdown = canShutdown();
		}
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void run() {
		init();
		while (!shutdown) {
			update();
			Thread.yield();
		}
		done();
	}
	//=================================================================================================================

	//=================================================================================================================
	protected void init() {
		platform.windowResize(this::resizeHandler);
		platform.graphics(this::graphicsHandler);
		platform.input(this::inputHandler);
		platform.init();
		initGUI();
		initScene();
		clock.start();
	}
	//=================================================================================================================

	//=================================================================================================================
	protected void initGraphics(Graphics g) {
		gui.initGraphics(g);
	}
	//=================================================================================================================
	
	//=================================================================================================================
	protected void initGUI() {

		var menu = new Menu();
		menu.position(3, 3);
		gui.container().item(menu);
		
		var buttonFullscreen = new Button("Fullscreen", this::fullscreen);
		menu.add(buttonFullscreen);

		var buttonShutdown = new Button("Shutdown", this::shutdown);
		menu.add(buttonShutdown);
		
	}
	//=================================================================================================================

	//=================================================================================================================
	protected void initScene() {
	}
	//=================================================================================================================
	
	//=================================================================================================================
	private void shutdown(Component source) {
		shutdown();
	}
	//=================================================================================================================

	//=================================================================================================================
	private void fullscreen(Component source) {
		var currentState = platform.windowFullscreen();
		if (currentState) ((Button) source).text("Fullscreen");
		else ((Button) source).text("Windowed");
		source.layout();
		platform.windowFullscreen(!currentState);
	}
	//=================================================================================================================
	
	//=================================================================================================================
	protected void update() {
		clock.update();
		platform.update();
		scene.update();
	}
	//=================================================================================================================

	//=================================================================================================================
	protected boolean canShutdown() {
		return true;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	protected void done() {}
	//=================================================================================================================
	
	//=================================================================================================================
	private void inputHandler(Input input) {
		scene.handleInput(input);
		gui.handleInput(input);
	}
	//=================================================================================================================
	
	//=================================================================================================================
	private void resizeHandler(float w, float h) {
		gui.size(w, h);
	}
	//=================================================================================================================

	//=================================================================================================================
	private boolean graphicsInitialized = false;
	//=================================================================================================================

	//=================================================================================================================
	private void graphicsHandler(Graphics g) {

		if (!graphicsInitialized) {
			graphicsInitialized = true;
			this.initGraphics(g);
		}
		
		g.setup3D();
		scene.render(g);
		
		g.setup2D();		
		gui.layout(g);
		gui.render(g);
		
	}
	//=================================================================================================================
	
}
//*********************************************************************************************************************
