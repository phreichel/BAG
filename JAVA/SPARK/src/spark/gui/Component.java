//*********************************************************************************************************************
package spark.gui;
//*********************************************************************************************************************

import java.util.EnumMap;
import java.util.EnumSet;
import java.util.Map;

import spark.platform.Graphics;

//*********************************************************************************************************************
public class Component {

	//=================================================================================================================
	private float x, y;
	private float width, height;
	private EnumSet<State> states;
	private Map<Property, Object> properties;
	private Container container;
	private Renderer renderer;
	private InputHandler inputHandler;
	//=================================================================================================================

	//=================================================================================================================
	public Component() {
		renderer = Renderer::DEFAULT;
		inputHandler = InputHandler::DEFAULT;
		states = EnumSet.of(State.DISPLAYED, State.ENABLED, State.LAYOUT_DIRTY);
		properties = new EnumMap<>(Property.class);
	}
	//=================================================================================================================

	//=================================================================================================================
	public boolean state(State state) {
		return states.contains(state);
	}
	//=================================================================================================================

	//=================================================================================================================
	public void state(State state, boolean flag) {
		if (flag) states.add(state);
		else states.remove(state);
	}
	//=================================================================================================================

	//=================================================================================================================
	public void property(Property key, Object value) {
		properties.put(key, value);
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public Object property(Property key) {
		return properties.get(key);
	}
	//=================================================================================================================

	//=================================================================================================================
	public float x() {
		return x;
	}
	//=================================================================================================================

	//=================================================================================================================
	public float y() {
		return y;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void position(float x, float y) {
		this.x = x;
		this.y = y;
	}
	//=================================================================================================================

	//=================================================================================================================
	public float width() {
		return width;
	}
	//=================================================================================================================

	//=================================================================================================================
	public float height() {
		return height;
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void size(float w, float h) {
		this.width = w;
		this.height = h;
	}
	//=================================================================================================================

	//=================================================================================================================
	public Container container() {
		return container;
	}
	//=================================================================================================================

	//=================================================================================================================
	public void container(Container c) {
		container = c;
	}
	//=================================================================================================================

	//=================================================================================================================
	public void handleContainerResized(
		float oldWidth, float oldHeight,
		float newWidth, float newHeight)
	{}
	//=================================================================================================================

	//=================================================================================================================
	public void trigger() {
		var trigger = (Action) this.properties.get(Property.TRIGGER);
		if (trigger == null) return;
		trigger.trigger(this);
	}
	//=================================================================================================================

	//=================================================================================================================
	public void layout() {
		if (!state(State.LAYOUT_DIRTY)) {
			if (container.component() != null)
				container.component().layout();
			state(State.LAYOUT_DIRTY, true);			
		}
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void layout(Graphics g) {

		if (!state(State.LAYOUT_DIRTY)) return;
		
		var children = (Container) property(Property.CHILDREN);
		if (children != null) children.layout(g);
		
		var layout = (Layout) property(Property.LAYOUT);
		if (layout != null) layout.layout(this, g);
		
		state(State.LAYOUT_DIRTY, false);
		
	}
	//=================================================================================================================
	
	//=================================================================================================================
	public void render(Graphics g) {
		renderer.render(this, g);
	}
	//=================================================================================================================

	//=================================================================================================================
	public Renderer renderer() {
		return renderer;
	}
	//=================================================================================================================

	//=================================================================================================================
	public void renderer(Renderer r) {
		renderer = r;
	}
	//=================================================================================================================

	//=================================================================================================================
	public void handleInput(InputContext context) {
		inputHandler.handle(context);
	}
	//=================================================================================================================

	//=================================================================================================================
	public InputHandler inputHandler() {
		return inputHandler;
	}
	//=================================================================================================================

	//=================================================================================================================
	public void inputHandler(InputHandler handler) {
		inputHandler = handler;
	}
	//=================================================================================================================
	
}
//*********************************************************************************************************************
