//*****************************************************************************
package yaga;
//*****************************************************************************

//*****************************************************************************
public class Application {

	//=========================================================================
	private Client client;
	private long tthen;
	//=========================================================================

	//=========================================================================
	public Application() {
		client = new Client();
	}
	//=========================================================================
	
	//=========================================================================
	public void run(String[] args) {
		config(args);
		init();
		loop();		
		done();
	}
	//=========================================================================

	//=========================================================================
	protected void config(String[] args) {
	}
	//=========================================================================

	//=========================================================================
	protected void init() {
		tthen = System.nanoTime();
		client.init();
	}
	//=========================================================================

	//=========================================================================
	protected void loop() {
		while (!terminate()) {
			update();
			sleep();
		}
	}
	//=========================================================================

	//=========================================================================
	protected boolean terminate() {
		return false;
	}
	//=========================================================================
	
	//=========================================================================
	protected void update() {
		long tnow = System.nanoTime();
		long tdelta = tnow-tthen;
		if (tdelta > 100L) {
			tthen = tnow;
			float dT = 0.000000001f * tdelta;
			client.update(dT);
		}		
	}
	//=========================================================================

	//=========================================================================
	protected void sleep() {
		try {
			Thread.sleep(1);			
		}  catch (InterruptedException e) {
			// just do nothing
		}
	}
	//=========================================================================
	
	//=========================================================================
	protected void done() {
		client.done();
	}
	//=========================================================================
	
}
//*****************************************************************************
