//************************************************************************************************
package core.input.virtual;
//************************************************************************************************

import core.input.mapping.ActionMapping;
import core.input.mapping.InputState;
import core.input.raw.InputAxis;
import core.input.raw.InputEvent;

//************************************************************************************************
public class VirtualInputAction extends ActionMapping implements IVirtualAction {

	//============================================================================================
	private final String  ident;
	private final String  action;
	private       boolean hasTriggered = false;
	//============================================================================================

	//============================================================================================
	public VirtualInputAction(
			String ident,
			String action,
			InputAxis axis,
			InputAxis ... modifiers) {
		super(axis, modifiers);
		this.ident = ident;
		this.action = action;
		this.onPress = this::onPress;
	}
	//============================================================================================

	//============================================================================================
	private void onPress(InputEvent event, InputState state) {
		this.hasTriggered = true;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public String getIdent() {
		return this.ident;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public String getAction() {
		return this.action;
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public boolean hasTriggered() {
		return this.hasTriggered;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void confirmTriggered() {
		this.hasTriggered = false;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void update(int nFrames, long periodNs) {
		// ignored for this
	}
	//============================================================================================
	
}
//************************************************************************************************
