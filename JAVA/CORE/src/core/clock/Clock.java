//************************************************************************************************
package core.clock;

import java.util.ArrayList;
import java.util.List;

//************************************************************************************************

//************************************************************************************************
public class Clock {

	//============================================================================================
	private long lastNs;
	private List<Schedule> schedules = new ArrayList<>();
	//============================================================================================

	//============================================================================================
	public void add(long period, ITask task) {
		var schedule = new Schedule(period, task);
		schedules.add(schedule);
	}
	//============================================================================================

	//============================================================================================
	public void remove(ITask task) {
		for (int i=0; i<schedules.size(); i++) {
			var schedule = schedules.get(i);
			if (schedule.task == task) {
				schedules.remove(i);
				i--;
			}
		}
	}
	//============================================================================================
	
	//============================================================================================
	public void start() {
		lastNs = System.nanoTime();
	}
	//============================================================================================
	
	//============================================================================================
	public void update() {

		long nowNs = System.nanoTime();
		long deltaNs = nowNs - lastNs;
		lastNs = nowNs;
		
		for (var schedule : schedules) {
			schedule.update(deltaNs);
		}
		
	}
	//============================================================================================

}
//************************************************************************************************
