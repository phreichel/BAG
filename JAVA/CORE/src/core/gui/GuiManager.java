//************************************************************************************************
package core.gui;
//************************************************************************************************

import core.api.ICanvas;
import core.api.IGameHandler;
import core.clock.ITask;
import core.event.GameEvent;
import core.input.EventType;
import core.platform.IGraphics;

//************************************************************************************************
public class GuiManager implements ICanvas, IGameHandler, ITask {

	//============================================================================================
	private final RootWidget root;
	//============================================================================================

	//============================================================================================
	public GuiManager() {
		this.root = createRootWidget();
	}
	//============================================================================================
	
	//============================================================================================
	public RootWidget getRoot() {
		return root;
	}
	//============================================================================================

	//============================================================================================
	public void onPaint(IGraphics graphics) {
		this.root.onPaint(graphics);
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void onGameEvent(GameEvent e) {
		if (e.type.equals(EventType.RESIZE)) {
			var data = (float[]) e.data;
			var _root = (RootWidget) root;
			_root._setOuterExtent(data[0], data[1]);
		}
		root.onGameEvent(e);
	}
	//============================================================================================

	//============================================================================================
	private RootWidget createRootWidget() {
		var rootWidget = new RootWidget(this);
		rootWidget.setLayout(RootLayout.INSTANCE);
		return rootWidget;
	}
	//============================================================================================

	//============================================================================================
	public LayerWidget createLayerWidget() {
		var layerWidget = new LayerWidget(this);
		return layerWidget;
	}
	//============================================================================================

	//============================================================================================
	public Label createLabel(String text) {
		var label = new Label(this);
		label.setText(text);
		return label;
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public void update(int nFrames, long periodNs) {
		root.update(nFrames, periodNs);
		root.updateLayout();
	}
	//============================================================================================
	
}
//************************************************************************************************
