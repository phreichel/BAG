//************************************************************************************************
package core.gui;
//************************************************************************************************

import java.util.Arrays;
import java.util.Collections;
import java.util.EnumSet;
import java.util.Set;

import javax.vecmath.Vector2f;

import core.platform.IGraphics;

//************************************************************************************************
public abstract class WidgetBase implements IWidget {

	//============================================================================================
	private GuiManager         guiManager    = null;
	private IWidgetContainer   parent        = null;
	private final Set<GuiFlag> flags         = EnumSet.noneOf(GuiFlag.class);
	private final Set<GuiFlag> flagsReadonly = Collections.unmodifiableSet(flags);
	private final Vector2f     location      = new Vector2f();     
	private final Vector2f     outerExtent   = new Vector2f();     
	private       boolean      layoutDirty   = false;
	private       ILayout      layout = null;
	//============================================================================================

	//============================================================================================
	protected String styleIdent = "default";
	//============================================================================================
	
	//============================================================================================
	public WidgetBase(GuiManager guiManager) {
		this.guiManager = guiManager;
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public GuiManager getGuiManager() {
		return guiManager;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public Set<GuiFlag> getFlags() {
		return this.flagsReadonly;
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public boolean hasFlags(GuiFlag ... flags) {
		return this.flags.containsAll(Arrays.asList(flags));
	}
	//============================================================================================

	//============================================================================================
	public void _setFlags(boolean state, GuiFlag ... flags) {
		if (state)
			this.flags.addAll(Arrays.asList(flags));
		else
			this.flags.removeAll(Arrays.asList(flags));
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public IWidgetContainer getParent() {
		return parent;
	}
	//============================================================================================

	//============================================================================================
	public void _setParent(IWidgetContainer parent) {
		this.parent = parent;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public Vector2f getLocation() {
		return this.location;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public Vector2f getOuterExtent() {
		return this.outerExtent;
	}
	//============================================================================================

	//============================================================================================
	public void _setLocation(Vector2f location) {
		_setLocation(location.x, location.y);
	}
	//============================================================================================

	//============================================================================================
	public void _setLocation(float x, float y) {
		this.location.set(x, y);
	}
	//============================================================================================

	//============================================================================================
	public void _setOuterExtent(Vector2f outerExtent) {
		_setOuterExtent(outerExtent.x, outerExtent.y);
	}
	//============================================================================================

	//============================================================================================
	public void _setOuterExtent(float extX, float extY) {
		this.outerExtent.set(extX, extY);
		_setLayoutDirty(true);
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void update(int nFrames, long periodNs) {}
	//============================================================================================

	//============================================================================================
	@Override
	public String getStyleIdent() {
		return this.styleIdent;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public Style getStyle() {
		return this
			.getGuiManager()
			.getTheme()
			.getStyle(this.getStyleIdent());
	}
	//============================================================================================

	//============================================================================================
	public Style _deriveStyle(String newStyleIdent) {
		var theme = this.getGuiManager().getTheme();
		var oldStyle = theme.getStyle(this.getStyleIdent());
		var newStyle = oldStyle.derive(newStyleIdent);
		theme._setStyle(newStyle);
		this.styleIdent = newStyleIdent;
		return newStyle;
	}
	//============================================================================================
	
	//============================================================================================
	@Override
	public ILayout getLayout() {
		return layout;
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void _setLayout(ILayout layout) {
		if (this.layout == layout) return;		
		this.layout = layout;
		if (this.layout != null) {
			this.layout.preserveState(this);
		}
		_setLayoutDirty(true);
	}
	//============================================================================================

	//============================================================================================
	@Override
	public void updateLayout(IGraphics graphics) {
		var layout = getLayout();
		if (layout == null) return;
		if (_isLayoutDirty()) {
			layout.updateLayout(this, graphics);
			layout.preserveState(this);
			_setLayoutDirty(false);
		}
	}
	//============================================================================================
	
	//============================================================================================
	public boolean _isLayoutDirty() {
		return layoutDirty;
	}
	//============================================================================================

	//============================================================================================
	public void _setLayoutDirty(boolean b) {
		layoutDirty = b;
	}
	//============================================================================================
	
}
//************************************************************************************************
